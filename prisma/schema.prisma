//==============config
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

//===========models
model User {
  id              Int               @id @default(autoincrement())
  email           String            @unique
  password        String
  name            String
  orders          OrderDetails[]
  created_at      DateTime          @default(now())
  updated_at      DateTime          @updatedAt
  deleted         Boolean           @default(false)
  ShoppingSession ShoppingSession[]
}

model OrderDetails {
  id    Int     @id @default(autoincrement())
  total Decimal

  user   User @relation(fields: [userId], references: [id])
  userId Int

  payment    PaymentDetails @relation(fields: [payment_id], references: [id])
  payment_id Int

  order_items     OrderItem[]
  ShippingDetails ShippingDetails[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  deleted    Boolean  @default(false)
}

model PaymentDetails {
  id     Int            @id @default(autoincrement())
  orders OrderDetails[]
  method String

  installments Int //parcelas

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  deleted    Boolean  @default(false)
}

model ProductCategory {
  id           Int       @id @default(autoincrement())
  name         String
  description  String
  picture_path String
  products     Product[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  deleted    Boolean  @default(false)
}

model Product {
  id           Int     @id @default(autoincrement())
  picture_path String
  description  String
  price        Decimal
  features     String
  name         String  @default("")

  category    ProductCategory @relation(fields: [category_id], references: [id])
  category_id Int

  order_items OrderItem[]

  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
  deleted    Boolean    @default(false)
  CartItem   CartItem[]
}

model OrderItem {
  id       Int     @id @default(autoincrement())
  quantity Decimal

  product    Product @relation(fields: [product_id], references: [id])
  product_id Int

  order    OrderDetails @relation(fields: [order_id], references: [id])
  order_id Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  deleted    Boolean  @default(false)
}

model ShippingDetails {
  id         Int     @id @default(autoincrement())
  address    String
  zip_code   String
  city       String
  country    String
  complement String?

  order    OrderDetails @relation(fields: [order_id], references: [id])
  order_id Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  deleted    Boolean  @default(false)
}

model ShoppingSession {
  id    Int     @id @default(autoincrement())
  total Decimal @default(00.00)

  order   User @relation(fields: [user_id], references: [id])
  user_id Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  CartItem CartItem[]
}

model CartItem {
  id       Int @id @default(autoincrement())
  quantity Int

  session    ShoppingSession @relation(fields: [session_id], references: [id])
  session_id Int

  product    Product @relation(fields: [product_id], references: [id])
  product_id Int
}
